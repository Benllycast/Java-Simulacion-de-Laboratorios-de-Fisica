/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MURAF.java
 *
 * Created on 02-oct-2009, 16:02:24
 */
import caida_libre.Ventana;
/**
 *
 * @author José Eduardo Pérez C
 */
public class Caida_Libre extends javax.swing.JPanel {

    /** Creates new form MURAF */
    public Caida_Libre() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(800, 600));

        jButton1.setFont(new java.awt.Font("Agency FB", 1, 18));
        jButton1.setText("Ver graficas");

        jButton2.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        jButton2.setText("Ir a simulación");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextArea1.setBackground(new java.awt.Color(0, 0, 0));
        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 0, 14));
        jTextArea1.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea1.setRows(5);
        jTextArea1.setText("Se le llama caída libre al movimiento que se debe únicamente a la influencia de la gravedad.\nTodos los cuerpos con este tipo de movimiento tienen una aceleración dirigida hacia abajo cuyo valor \ndepende del lugar en el que se encuentren. En la Tierra este valor es de aproximadamente 9,8 m/s², es \ndecir que los cuerpos dejados en caída libre aumentan su velocidad (hacia abajo) en 9,8 m/s cada segundo. \nEn la caída libre no se tiene en cuenta la resistencia del aire. \nLa aceleración a la que se ve sometido un cuerpo en caída libre es tan importante en la Física que recibe \nel nombre especial de aceleración de la gravedad y se representa mediante la letra g. \n\nPara la caída libre, la gráfica posición tiempo tiene la siguiente apariencia: \n\nRecuerda que en las gráficas posición-tiempo, una curva indicaba la existencia de aceleración. \nLa pendiente cada vez más negativa nos indica que la velocidad del cuerpo es cada vez más negativa, \nes decir, cada vez mayor pero dirigida hacia abajo. Esto significa que el movimiento se va haciendo más\nrápido a medida que transcurre el tiempo. \nRecuerda las ecuaciones generales del movimiento:     \n           h = (1/2)*g*(t^2) , para la altura en un instante t. \n          Vf = g*t , para la hallar la velocidad final del objeto.\n\n\n\n");
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addComponent(jButton1)
                        .addGap(113, 113, 113)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Ventana frame = new Ventana();
        frame.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

}
